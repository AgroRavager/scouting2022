{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "dc1b9f04-34c2-42b0-a7c7-28628e6722da",
   "metadata": {},
   "outputs": [],
   "source": [
    "import bokeh.io as io\n",
    "import bokeh.models as models\n",
    "import bokeh.plotting as plotting\n",
    "import bokeh.resources as resources\n",
    "import pandas as pd\n",
    "from bokeh.models import ColumnDataSource\n",
    "import math\n",
    "from bokeh.io import output_notebook\n",
    "import bokeh.palettes\n",
    "import pickle\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from bokeh.plotting import figure, show\n",
    "from bokeh.transform import factor_cmap, dodge\n",
    "import math\n",
    "from bokeh.layouts import column, row, grid, gridplot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "4b2b86d7-5bd4-4085-a8c0-3f627754f504",
   "metadata": {},
   "outputs": [],
   "source": [
    "import viewer.app.data as data"
   ]
  },
  {
   "cell_type": "raw",
   "id": "9632b151-c0f4-4f24-95de-dd6fcd419c6c",
   "metadata": {},
   "source": [
    "!set PYTHONPATH"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "3e06580c-4f14-473f-880a-d38023772ba7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from bokeh.io import output_notebook"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "ed11d924-89af-4e67-bfe1-de42941f5025",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <div class=\"bk-root\">\n",
       "        <a href=\"https://bokeh.org\" target=\"_blank\" class=\"bk-logo bk-logo-small bk-logo-notebook\"></a>\n",
       "        <span id=\"2063\">Loading BokehJS ...</span>\n",
       "    </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "\n",
       "(function(root) {\n",
       "  function now() {\n",
       "    return new Date();\n",
       "  }\n",
       "\n",
       "  const force = true;\n",
       "\n",
       "  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n",
       "    root._bokeh_onload_callbacks = [];\n",
       "    root._bokeh_is_loading = undefined;\n",
       "  }\n",
       "\n",
       "  const JS_MIME_TYPE = 'application/javascript';\n",
       "  const HTML_MIME_TYPE = 'text/html';\n",
       "  const EXEC_MIME_TYPE = 'application/vnd.bokehjs_exec.v0+json';\n",
       "  const CLASS_NAME = 'output_bokeh rendered_html';\n",
       "\n",
       "  /**\n",
       "   * Render data to the DOM node\n",
       "   */\n",
       "  function render(props, node) {\n",
       "    const script = document.createElement(\"script\");\n",
       "    node.appendChild(script);\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when an output is cleared or removed\n",
       "   */\n",
       "  function handleClearOutput(event, handle) {\n",
       "    const cell = handle.cell;\n",
       "\n",
       "    const id = cell.output_area._bokeh_element_id;\n",
       "    const server_id = cell.output_area._bokeh_server_id;\n",
       "    // Clean up Bokeh references\n",
       "    if (id != null && id in Bokeh.index) {\n",
       "      Bokeh.index[id].model.document.clear();\n",
       "      delete Bokeh.index[id];\n",
       "    }\n",
       "\n",
       "    if (server_id !== undefined) {\n",
       "      // Clean up Bokeh references\n",
       "      const cmd_clean = \"from bokeh.io.state import curstate; print(curstate().uuid_to_server['\" + server_id + \"'].get_sessions()[0].document.roots[0]._id)\";\n",
       "      cell.notebook.kernel.execute(cmd_clean, {\n",
       "        iopub: {\n",
       "          output: function(msg) {\n",
       "            const id = msg.content.text.trim();\n",
       "            if (id in Bokeh.index) {\n",
       "              Bokeh.index[id].model.document.clear();\n",
       "              delete Bokeh.index[id];\n",
       "            }\n",
       "          }\n",
       "        }\n",
       "      });\n",
       "      // Destroy server and session\n",
       "      const cmd_destroy = \"import bokeh.io.notebook as ion; ion.destroy_server('\" + server_id + \"')\";\n",
       "      cell.notebook.kernel.execute(cmd_destroy);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  /**\n",
       "   * Handle when a new output is added\n",
       "   */\n",
       "  function handleAddOutput(event, handle) {\n",
       "    const output_area = handle.output_area;\n",
       "    const output = handle.output;\n",
       "\n",
       "    // limit handleAddOutput to display_data with EXEC_MIME_TYPE content only\n",
       "    if ((output.output_type != \"display_data\") || (!Object.prototype.hasOwnProperty.call(output.data, EXEC_MIME_TYPE))) {\n",
       "      return\n",
       "    }\n",
       "\n",
       "    const toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n",
       "\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"id\"] !== undefined) {\n",
       "      toinsert[toinsert.length - 1].firstChild.textContent = output.data[JS_MIME_TYPE];\n",
       "      // store reference to embed id on output_area\n",
       "      output_area._bokeh_element_id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n",
       "    }\n",
       "    if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n",
       "      const bk_div = document.createElement(\"div\");\n",
       "      bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n",
       "      const script_attrs = bk_div.children[0].attributes;\n",
       "      for (let i = 0; i < script_attrs.length; i++) {\n",
       "        toinsert[toinsert.length - 1].firstChild.setAttribute(script_attrs[i].name, script_attrs[i].value);\n",
       "        toinsert[toinsert.length - 1].firstChild.textContent = bk_div.children[0].textContent\n",
       "      }\n",
       "      // store reference to server id on output_area\n",
       "      output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n",
       "    }\n",
       "  }\n",
       "\n",
       "  function register_renderer(events, OutputArea) {\n",
       "\n",
       "    function append_mime(data, metadata, element) {\n",
       "      // create a DOM node to render to\n",
       "      const toinsert = this.create_output_subarea(\n",
       "        metadata,\n",
       "        CLASS_NAME,\n",
       "        EXEC_MIME_TYPE\n",
       "      );\n",
       "      this.keyboard_manager.register_events(toinsert);\n",
       "      // Render to node\n",
       "      const props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n",
       "      render(props, toinsert[toinsert.length - 1]);\n",
       "      element.append(toinsert);\n",
       "      return toinsert\n",
       "    }\n",
       "\n",
       "    /* Handle when an output is cleared or removed */\n",
       "    events.on('clear_output.CodeCell', handleClearOutput);\n",
       "    events.on('delete.Cell', handleClearOutput);\n",
       "\n",
       "    /* Handle when a new output is added */\n",
       "    events.on('output_added.OutputArea', handleAddOutput);\n",
       "\n",
       "    /**\n",
       "     * Register the mime type and append_mime function with output_area\n",
       "     */\n",
       "    OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n",
       "      /* Is output safe? */\n",
       "      safe: true,\n",
       "      /* Index of renderer in `output_area.display_order` */\n",
       "      index: 0\n",
       "    });\n",
       "  }\n",
       "\n",
       "  // register the mime type if in Jupyter Notebook environment and previously unregistered\n",
       "  if (root.Jupyter !== undefined) {\n",
       "    const events = require('base/js/events');\n",
       "    const OutputArea = require('notebook/js/outputarea').OutputArea;\n",
       "\n",
       "    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n",
       "      register_renderer(events, OutputArea);\n",
       "    }\n",
       "  }\n",
       "\n",
       "  \n",
       "  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n",
       "    root._bokeh_timeout = Date.now() + 5000;\n",
       "    root._bokeh_failed_load = false;\n",
       "  }\n",
       "\n",
       "  const NB_LOAD_WARNING = {'data': {'text/html':\n",
       "     \"<div style='background-color: #fdd'>\\n\"+\n",
       "     \"<p>\\n\"+\n",
       "     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n",
       "     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n",
       "     \"</p>\\n\"+\n",
       "     \"<ul>\\n\"+\n",
       "     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n",
       "     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n",
       "     \"</ul>\\n\"+\n",
       "     \"<code>\\n\"+\n",
       "     \"from bokeh.resources import INLINE\\n\"+\n",
       "     \"output_notebook(resources=INLINE)\\n\"+\n",
       "     \"</code>\\n\"+\n",
       "     \"</div>\"}};\n",
       "\n",
       "  function display_loaded() {\n",
       "    const el = document.getElementById(\"2063\");\n",
       "    if (el != null) {\n",
       "      el.textContent = \"BokehJS is loading...\";\n",
       "    }\n",
       "    if (root.Bokeh !== undefined) {\n",
       "      if (el != null) {\n",
       "        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n",
       "      }\n",
       "    } else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(display_loaded, 100)\n",
       "    }\n",
       "  }\n",
       "\n",
       "\n",
       "  function run_callbacks() {\n",
       "    try {\n",
       "      root._bokeh_onload_callbacks.forEach(function(callback) {\n",
       "        if (callback != null)\n",
       "          callback();\n",
       "      });\n",
       "    } finally {\n",
       "      delete root._bokeh_onload_callbacks\n",
       "    }\n",
       "    console.debug(\"Bokeh: all callbacks have finished\");\n",
       "  }\n",
       "\n",
       "  function load_libs(css_urls, js_urls, callback) {\n",
       "    if (css_urls == null) css_urls = [];\n",
       "    if (js_urls == null) js_urls = [];\n",
       "\n",
       "    root._bokeh_onload_callbacks.push(callback);\n",
       "    if (root._bokeh_is_loading > 0) {\n",
       "      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n",
       "      return null;\n",
       "    }\n",
       "    if (js_urls == null || js_urls.length === 0) {\n",
       "      run_callbacks();\n",
       "      return null;\n",
       "    }\n",
       "    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n",
       "    root._bokeh_is_loading = css_urls.length + js_urls.length;\n",
       "\n",
       "    function on_load() {\n",
       "      root._bokeh_is_loading--;\n",
       "      if (root._bokeh_is_loading === 0) {\n",
       "        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n",
       "        run_callbacks()\n",
       "      }\n",
       "    }\n",
       "\n",
       "    function on_error(url) {\n",
       "      console.error(\"failed to load \" + url);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < css_urls.length; i++) {\n",
       "      const url = css_urls[i];\n",
       "      const element = document.createElement(\"link\");\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.rel = \"stylesheet\";\n",
       "      element.type = \"text/css\";\n",
       "      element.href = url;\n",
       "      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n",
       "      document.body.appendChild(element);\n",
       "    }\n",
       "\n",
       "    for (let i = 0; i < js_urls.length; i++) {\n",
       "      const url = js_urls[i];\n",
       "      const element = document.createElement('script');\n",
       "      element.onload = on_load;\n",
       "      element.onerror = on_error.bind(null, url);\n",
       "      element.async = false;\n",
       "      element.src = url;\n",
       "      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n",
       "      document.head.appendChild(element);\n",
       "    }\n",
       "  };\n",
       "\n",
       "  function inject_raw_css(css) {\n",
       "    const element = document.createElement(\"style\");\n",
       "    element.appendChild(document.createTextNode(css));\n",
       "    document.body.appendChild(element);\n",
       "  }\n",
       "\n",
       "  \n",
       "  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-2.4.2.min.js\"];\n",
       "  const css_urls = [];\n",
       "  \n",
       "\n",
       "  const inline_js = [\n",
       "    function(Bokeh) {\n",
       "      Bokeh.set_log_level(\"info\");\n",
       "    },\n",
       "    function(Bokeh) {\n",
       "    \n",
       "    \n",
       "    }\n",
       "  ];\n",
       "\n",
       "  function run_inline_js() {\n",
       "    \n",
       "    if (root.Bokeh !== undefined || force === true) {\n",
       "      \n",
       "    for (let i = 0; i < inline_js.length; i++) {\n",
       "      inline_js[i].call(root, root.Bokeh);\n",
       "    }\n",
       "    if (force === true) {\n",
       "        display_loaded();\n",
       "      }} else if (Date.now() < root._bokeh_timeout) {\n",
       "      setTimeout(run_inline_js, 100);\n",
       "    } else if (!root._bokeh_failed_load) {\n",
       "      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n",
       "      root._bokeh_failed_load = true;\n",
       "    } else if (force !== true) {\n",
       "      const cell = $(document.getElementById(\"2063\")).parents('.cell').data().cell;\n",
       "      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n",
       "    }\n",
       "\n",
       "  }\n",
       "\n",
       "  if (root._bokeh_is_loading === 0) {\n",
       "    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n",
       "    run_inline_js();\n",
       "  } else {\n",
       "    load_libs(css_urls, js_urls, function() {\n",
       "      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n",
       "      run_inline_js();\n",
       "    });\n",
       "  }\n",
       "}(window));"
      ],
      "application/vnd.bokehjs_load.v0+json": "\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n\n  if (typeof root._bokeh_onload_callbacks === \"undefined\" || force === true) {\n    root._bokeh_onload_callbacks = [];\n    root._bokeh_is_loading = undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) === \"undefined\" || force === true) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  const NB_LOAD_WARNING = {'data': {'text/html':\n     \"<div style='background-color: #fdd'>\\n\"+\n     \"<p>\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"</p>\\n\"+\n     \"<ul>\\n\"+\n     \"<li>re-rerun `output_notebook()` to attempt to load from CDN again, or</li>\\n\"+\n     \"<li>use INLINE resources instead, as so:</li>\\n\"+\n     \"</ul>\\n\"+\n     \"<code>\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources=INLINE)\\n\"+\n     \"</code>\\n\"+\n     \"</div>\"}};\n\n  function display_loaded() {\n    const el = document.getElementById(\"2063\");\n    if (el != null) {\n      el.textContent = \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !== undefined) {\n      if (el != null) {\n        el.textContent = \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading > 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls == null || js_urls.length === 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading = css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error(url) {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error.bind(null, url);\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  \n  const js_urls = [\"https://cdn.bokeh.org/bokeh/release/bokeh-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-2.4.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-mathjax-2.4.2.min.js\"];\n  const css_urls = [];\n  \n\n  const inline_js = [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    function(Bokeh) {\n    \n    \n    }\n  ];\n\n  function run_inline_js() {\n    \n    if (root.Bokeh !== undefined || force === true) {\n      \n    for (let i = 0; i < inline_js.length; i++) {\n      inline_js[i].call(root, root.Bokeh);\n    }\n    if (force === true) {\n        display_loaded();\n      }} else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    } else if (force !== true) {\n      const cell = $(document.getElementById(\"2063\")).parents('.cell').data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading === 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "output_notebook()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "8c86df1a-7e09-46bf-91b3-dd11b0cc3ed5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "6f5e92c5-c5b1-4b43-91fc-3c07cca7e60e",
   "metadata": {},
   "outputs": [],
   "source": [
    "measures = data.get_data()[0]\n",
    "matches = data.get_data()[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "2dc705f5-d699-495a-b6c2-e72fef8fa6bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match</th>\n",
       "      <th>measure1</th>\n",
       "      <th>measure2</th>\n",
       "      <th>measure_type</th>\n",
       "      <th>phase</th>\n",
       "      <th>task</th>\n",
       "      <th>team_number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>qm1</td>\n",
       "      <td>left</td>\n",
       "      <td>-1</td>\n",
       "      <td>categorical</td>\n",
       "      <td>auto</td>\n",
       "      <td>start_pos</td>\n",
       "      <td>frc1294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>qm1</td>\n",
       "      <td>1</td>\n",
       "      <td>-1</td>\n",
       "      <td>count</td>\n",
       "      <td>auto</td>\n",
       "      <td>pickup_field</td>\n",
       "      <td>frc1294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>qm1</td>\n",
       "      <td>2</td>\n",
       "      <td>-1</td>\n",
       "      <td>count</td>\n",
       "      <td>tele</td>\n",
       "      <td>pickup-field</td>\n",
       "      <td>frc4512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>qm1</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>count</td>\n",
       "      <td>endgame</td>\n",
       "      <td>penalty_count</td>\n",
       "      <td>frc4915</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    match measure1 measure2 measure_type    phase           task team_number\n",
       "0     qm1     left       -1  categorical     auto      start_pos     frc1294\n",
       "1     qm1        1       -1        count     auto   pickup_field     frc1294\n",
       "10    qm1        2       -1        count     tele   pickup-field     frc4512\n",
       "100   qm1        0       -1        count  endgame  penalty_count     frc4915"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "measures.head(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "e142f603-7dde-498d-8948-9d024c3e5e80",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\frc13\\AppData\\Local\\Temp\\ipykernel_10224\\133284879.py:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  m['phase_task'] = m['phase'] + \"_\" + m['task']\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match</th>\n",
       "      <th>team_number</th>\n",
       "      <th>phase_task</th>\n",
       "      <th>measure1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1275</th>\n",
       "      <td>qm11</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1282</th>\n",
       "      <td>qm11</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1291</th>\n",
       "      <td>qm11</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1338</th>\n",
       "      <td>qm11</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1340</th>\n",
       "      <td>qm11</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1909</th>\n",
       "      <td>qm16</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1918</th>\n",
       "      <td>qm16</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994</th>\n",
       "      <td>qm16</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>qm16</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>qm16</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2417</th>\n",
       "      <td>qm20</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2421</th>\n",
       "      <td>qm20</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2424</th>\n",
       "      <td>qm20</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2460</th>\n",
       "      <td>qm20</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2465</th>\n",
       "      <td>qm20</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2902</th>\n",
       "      <td>qm24</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2914</th>\n",
       "      <td>qm24</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2994</th>\n",
       "      <td>qm24</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2996</th>\n",
       "      <td>qm24</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2997</th>\n",
       "      <td>qm24</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3283</th>\n",
       "      <td>qm27</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3299</th>\n",
       "      <td>qm27</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3324</th>\n",
       "      <td>qm27</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3327</th>\n",
       "      <td>qm27</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3328</th>\n",
       "      <td>qm27</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4031</th>\n",
       "      <td>qm33</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4043</th>\n",
       "      <td>qm33</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4051</th>\n",
       "      <td>qm33</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4116</th>\n",
       "      <td>qm33</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4117</th>\n",
       "      <td>qm33</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4659</th>\n",
       "      <td>qm38</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4671</th>\n",
       "      <td>qm38</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4678</th>\n",
       "      <td>qm38</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4681</th>\n",
       "      <td>qm38</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4748</th>\n",
       "      <td>qm38</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>518</th>\n",
       "      <td>qm5</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>530</th>\n",
       "      <td>qm5</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>543</th>\n",
       "      <td>qm5</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589</th>\n",
       "      <td>qm5</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>qm5</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6031</th>\n",
       "      <td>qm50</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6046</th>\n",
       "      <td>qm50</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6051</th>\n",
       "      <td>qm50</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6118</th>\n",
       "      <td>qm50</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6125</th>\n",
       "      <td>qm50</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6604</th>\n",
       "      <td>qm54</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>endgame_hangar_level_end</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6606</th>\n",
       "      <td>qm54</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6607</th>\n",
       "      <td>qm54</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_lower</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6614</th>\n",
       "      <td>qm54</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>auto_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6615</th>\n",
       "      <td>qm54</td>\n",
       "      <td>frc1318</td>\n",
       "      <td>tele_upper</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     match team_number                phase_task measure1\n",
       "1275  qm11     frc1318                auto_upper        0\n",
       "1282  qm11     frc1318                tele_upper        3\n",
       "1291  qm11     frc1318                tele_lower        1\n",
       "1338  qm11     frc1318  endgame_hangar_level_end        0\n",
       "1340  qm11     frc1318                auto_lower        0\n",
       "1909  qm16     frc1318                auto_upper        0\n",
       "1918  qm16     frc1318                tele_upper        5\n",
       "1994  qm16     frc1318  endgame_hangar_level_end        0\n",
       "1995  qm16     frc1318                auto_lower        0\n",
       "1997  qm16     frc1318                tele_lower        0\n",
       "2417  qm20     frc1318                tele_upper        4\n",
       "2421  qm20     frc1318                tele_lower        1\n",
       "2424  qm20     frc1318  endgame_hangar_level_end        2\n",
       "2460  qm20     frc1318                auto_lower        0\n",
       "2465  qm20     frc1318                auto_upper        0\n",
       "2902  qm24     frc1318                auto_upper        1\n",
       "2914  qm24     frc1318                tele_upper        3\n",
       "2994  qm24     frc1318  endgame_hangar_level_end        0\n",
       "2996  qm24     frc1318                auto_lower        0\n",
       "2997  qm24     frc1318                tele_lower        0\n",
       "3283  qm27     frc1318                auto_upper        0\n",
       "3299  qm27     frc1318                tele_upper        6\n",
       "3324  qm27     frc1318  endgame_hangar_level_end        0\n",
       "3327  qm27     frc1318                auto_lower        0\n",
       "3328  qm27     frc1318                tele_lower        0\n",
       "4031  qm33     frc1318                auto_upper        0\n",
       "4043  qm33     frc1318                tele_upper        7\n",
       "4051  qm33     frc1318                tele_lower        1\n",
       "4116  qm33     frc1318  endgame_hangar_level_end        0\n",
       "4117  qm33     frc1318                auto_lower        0\n",
       "4659  qm38     frc1318                auto_upper        1\n",
       "4671  qm38     frc1318                tele_upper        4\n",
       "4678  qm38     frc1318                tele_lower        1\n",
       "4681  qm38     frc1318  endgame_hangar_level_end        0\n",
       "4748  qm38     frc1318                auto_lower        0\n",
       "518    qm5     frc1318                auto_upper        0\n",
       "530    qm5     frc1318                tele_upper        4\n",
       "543    qm5     frc1318  endgame_hangar_level_end        2\n",
       "589    qm5     frc1318                tele_lower        0\n",
       "590    qm5     frc1318                auto_lower        0\n",
       "6031  qm50     frc1318                auto_upper        1\n",
       "6046  qm50     frc1318                tele_upper        8\n",
       "6051  qm50     frc1318                tele_lower        2\n",
       "6118  qm50     frc1318  endgame_hangar_level_end        2\n",
       "6125  qm50     frc1318                auto_lower        0\n",
       "6604  qm54     frc1318  endgame_hangar_level_end        0\n",
       "6606  qm54     frc1318                auto_lower        0\n",
       "6607  qm54     frc1318                tele_lower        0\n",
       "6614  qm54     frc1318                auto_upper        0\n",
       "6615  qm54     frc1318                tele_upper        0"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m = measures[measures.team_number == 'frc1318']\n",
    "m['phase_task'] = m['phase'] + \"_\" + m['task']\n",
    "m = m[['match', 'team_number', 'phase_task', 'measure1']]\n",
    "filter1 = m['phase_task'].isin(['auto_upper', 'auto_lower', 'tele_upper', 'tele_lower', 'endgame_hangar_level_end'])\n",
    "m = m[filter1]\n",
    "m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "b592e336-fb0c-47ee-9505-d73c433c48b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "tele_up, tele_low, auto_up, auto_low, hangar = ['tele_up'], ['tele_low'], ['auto_up'], ['auto_low'], ['hangar']\n",
    "for i in range(0, len(m)):\n",
    "    if(m.iloc[i]['phase_task'] == 'tele_upper'):\n",
    "        tele_up.append(m.iloc[i]['measure1'])\n",
    "    if(m.iloc[i]['phase_task'] == 'tele_lower'):\n",
    "        tele_low.append(m.iloc[i]['measure1'])\n",
    "    if(m.iloc[i]['phase_task'] == 'auto_upper'):\n",
    "        auto_up.append(m.iloc[i]['measure1'])\n",
    "    if(m.iloc[i]['phase_task'] == 'auto_lower'):\n",
    "        auto_low.append(m.iloc[i]['measure1'])\n",
    "    if(m.iloc[i]['phase_task'] == 'endgame_hangar_level_end'):\n",
    "        hangar.append(m.iloc[i]['measure1'])\n",
    "# 5 lists with the measure 1 values for each task "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "0ea62416-134d-41fe-8f6f-c6226831106b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['tele_up', '3', '5', '4', '3', '6', '7', '4', '4', '8', '0']"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tele_up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "ee2d9f1c-3827-46fb-af63-743819bd4324",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>alliance</th>\n",
       "      <th>match</th>\n",
       "      <th>match_time</th>\n",
       "      <th>station</th>\n",
       "      <th>team_number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>blue</td>\n",
       "      <td>qm1</td>\n",
       "      <td>2022-03-19 21:15:00</td>\n",
       "      <td>1</td>\n",
       "      <td>frc4915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>blue</td>\n",
       "      <td>qm1</td>\n",
       "      <td>2022-03-19 21:15:00</td>\n",
       "      <td>2</td>\n",
       "      <td>frc1294</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>red</td>\n",
       "      <td>qm2</td>\n",
       "      <td>2022-03-19 21:25:00</td>\n",
       "      <td>2</td>\n",
       "      <td>frc4579</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>red</td>\n",
       "      <td>qm17</td>\n",
       "      <td>2022-03-19 23:45:00</td>\n",
       "      <td>2</td>\n",
       "      <td>frc2980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>red</td>\n",
       "      <td>qm17</td>\n",
       "      <td>2022-03-19 23:45:00</td>\n",
       "      <td>3</td>\n",
       "      <td>frc4180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>red</td>\n",
       "      <td>qm16</td>\n",
       "      <td>2022-03-19 23:37:30</td>\n",
       "      <td>3</td>\n",
       "      <td>frc2929</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>blue</td>\n",
       "      <td>qm17</td>\n",
       "      <td>2022-03-19 23:45:00</td>\n",
       "      <td>1</td>\n",
       "      <td>frc4469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>blue</td>\n",
       "      <td>qm17</td>\n",
       "      <td>2022-03-19 23:45:00</td>\n",
       "      <td>2</td>\n",
       "      <td>frc4911</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>blue</td>\n",
       "      <td>qm17</td>\n",
       "      <td>2022-03-19 23:45:00</td>\n",
       "      <td>3</td>\n",
       "      <td>frc3786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>red</td>\n",
       "      <td>qm17</td>\n",
       "      <td>2022-03-19 23:45:00</td>\n",
       "      <td>1</td>\n",
       "      <td>frc3049</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>372 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    alliance match           match_time  station team_number\n",
       "0       blue   qm1  2022-03-19 21:15:00        1     frc4915\n",
       "1       blue   qm1  2022-03-19 21:15:00        2     frc1294\n",
       "10       red   qm2  2022-03-19 21:25:00        2     frc4579\n",
       "100      red  qm17  2022-03-19 23:45:00        2     frc2980\n",
       "101      red  qm17  2022-03-19 23:45:00        3     frc4180\n",
       "..       ...   ...                  ...      ...         ...\n",
       "95       red  qm16  2022-03-19 23:37:30        3     frc2929\n",
       "96      blue  qm17  2022-03-19 23:45:00        1     frc4469\n",
       "97      blue  qm17  2022-03-19 23:45:00        2     frc4911\n",
       "98      blue  qm17  2022-03-19 23:45:00        3     frc3786\n",
       "99       red  qm17  2022-03-19 23:45:00        1     frc3049\n",
       "\n",
       "[372 rows x 5 columns]"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "matches"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "dd6db1cc-38a9-449e-a23d-eca02219f07e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['team', 'frc1318'],\n",
       " ['match',\n",
       "  'qm11',\n",
       "  'qm16',\n",
       "  'qm20',\n",
       "  'qm24',\n",
       "  'qm27',\n",
       "  'qm33',\n",
       "  'qm38',\n",
       "  'qm5',\n",
       "  'qm50',\n",
       "  'qm54'],\n",
       " ['tele_up', '3', '5', '4', '3', '6', '7', '4', '4', '8', '0'],\n",
       " ['tele_low', '1', '0', '1', '0', '0', '1', '1', '0', '2', '0'],\n",
       " ['auto_up', '0', '0', '0', '1', '0', '0', '1', '0', '1', '0'],\n",
       " ['auto_low', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],\n",
       " ['hangar', '0', '0', '2', '0', '0', '0', '0', '2', '2', '0']]"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "matches = list(m.match.unique())\n",
    "matches.insert(0, 'match')\n",
    "big_boi = [['team', 'frc1318'], matches, tele_up, tele_low, auto_up, auto_low, hangar]\n",
    "big_boi\n",
    "\n",
    "#autofill empty values with 0\n",
    "#make the match list 1D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "de7ce6b0-d292-4342-9e5f-f3ad4a89d597",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['team',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318'],\n",
       " ['match',\n",
       "  'qm11',\n",
       "  'qm16',\n",
       "  'qm20',\n",
       "  'qm24',\n",
       "  'qm27',\n",
       "  'qm33',\n",
       "  'qm38',\n",
       "  'qm5',\n",
       "  'qm50',\n",
       "  'qm54'],\n",
       " ['tele_up', '3', '5', '4', '3', '6', '7', '4', '4', '8', '0'],\n",
       " ['tele_low', '1', '0', '1', '0', '0', '1', '1', '0', '2', '0'],\n",
       " ['auto_up', '0', '0', '0', '1', '0', '0', '1', '0', '1', '0'],\n",
       " ['auto_low', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],\n",
       " ['hangar', '0', '0', '2', '0', '0', '0', '0', '2', '2', '0']]"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for l in range(1, len(big_boi[1])):\n",
    "    for i in big_boi:\n",
    "        if(i != big_boi[0]):\n",
    "            if (len(big_boi[1]) - len(i)) > 0:\n",
    "                i.append('0')\n",
    "        if(i == big_boi[0]):\n",
    "            if (len(big_boi[1]) - len(i)) > 0:\n",
    "                i.append('frc1318')\n",
    "big_boi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "7efa7476-f393-4284-a85f-a3b2ace45892",
   "metadata": {},
   "outputs": [],
   "source": [
    "dictchart = {'team': big_boi[0][1:], 'match': big_boi[1][1:], 'tele_up': big_boi[2][1:], 'tele_low': big_boi[3][1:], 'auto_up': big_boi[4][1:], 'auto_low':big_boi[5][1:], 'hangar':big_boi[6][1:]}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "46302629-0927-4007-9073-49d3d3c61c53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'team': ['frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318'],\n",
       " 'match': ['qm11',\n",
       "  'qm16',\n",
       "  'qm20',\n",
       "  'qm24',\n",
       "  'qm27',\n",
       "  'qm33',\n",
       "  'qm38',\n",
       "  'qm5',\n",
       "  'qm50',\n",
       "  'qm54'],\n",
       " 'tele_up': ['3', '5', '4', '3', '6', '7', '4', '4', '8', '0'],\n",
       " 'tele_low': ['1', '0', '1', '0', '0', '1', '1', '0', '2', '0'],\n",
       " 'auto_up': ['0', '0', '0', '1', '0', '0', '1', '0', '1', '0'],\n",
       " 'auto_low': ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],\n",
       " 'hangar': ['0', '0', '2', '0', '0', '0', '0', '2', '2', '0']}"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dictchart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "ca60c9f0-05ba-405c-8974-1287611aa858",
   "metadata": {},
   "outputs": [],
   "source": [
    "import bokeh.io as io\n",
    "import bokeh.models as models\n",
    "import bokeh.plotting as plotting\n",
    "import bokeh.resources as resources\n",
    "import pandas as pd\n",
    "from bokeh.models import ColumnDataSource\n",
    "import math\n",
    "from bokeh.io import output_notebook\n",
    "import bokeh.palettes\n",
    "import pickle\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from bokeh.models import ColumnDataSource\n",
    "from bokeh.plotting import figure, show\n",
    "from bokeh.transform import factor_cmap, dodge\n",
    "import math\n",
    "from bokeh.layouts import column, row, grid, gridplot\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "83a1d7b2-a2b9-49b1-8459-ea9eeadf406f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'team': ['frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318',\n",
       "  'frc1318'],\n",
       " 'match': ['qm11',\n",
       "  'qm16',\n",
       "  'qm20',\n",
       "  'qm24',\n",
       "  'qm27',\n",
       "  'qm33',\n",
       "  'qm38',\n",
       "  'qm5',\n",
       "  'qm50',\n",
       "  'qm54'],\n",
       " 'tele_up': ['3', '5', '4', '3', '6', '7', '4', '4', '8', '0'],\n",
       " 'tele_low': ['1', '0', '1', '0', '0', '1', '1', '0', '2', '0'],\n",
       " 'auto_up': ['0', '0', '0', '1', '0', '0', '1', '0', '1', '0'],\n",
       " 'auto_low': ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],\n",
       " 'hangar': ['0', '0', '2', '0', '0', '0', '0', '2', '2', '0']}"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dictchart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "3b6ca9ae-fb17-4030-b361-f2d789e541d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "numpy.int32"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(df['tele_low'][0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "0c123e5a-ec21-4525-8691-747f68113120",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>match</th>\n",
       "      <th>tele_up</th>\n",
       "      <th>tele_low</th>\n",
       "      <th>auto_up</th>\n",
       "      <th>auto_low</th>\n",
       "      <th>hangar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>qm11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>qm16</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>qm20</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>qm24</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>qm27</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>qm33</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>qm38</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>qm5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>qm50</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>qm54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  match tele_up tele_low auto_up auto_low hangar\n",
       "0  qm11       3        1       0        0      0\n",
       "1  qm16       5        0       0        0      0\n",
       "2  qm20       4        1       0        0      2\n",
       "3  qm24       3        0       1        0      0\n",
       "4  qm27       6        0       0        0      0\n",
       "5  qm33       7        1       0        0      0\n",
       "6  qm38       4        1       1        0      0\n",
       "7   qm5       4        0       0        0      2\n",
       "8  qm50       8        2       1        0      2\n",
       "9  qm54       0        0       0        0      0"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame(dictchart)\n",
    "df.drop(columns = 'team')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "8d3e3299-cc10-491a-a287-df3f4c108375",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['tele_up'] = df['tele_up'].astype('int32')\n",
    "df['tele_low'] = df['tele_low'].astype('int32')\n",
    "df['auto_up'] = df['auto_up'].astype('int32')\n",
    "df['auto_low'] = df['auto_low'].astype('int32')\n",
    "df['hangar'] = df['hangar'].astype('int32')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "8b3134df-3e30-42a6-94f4-64ae1862b89a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>team</th>\n",
       "      <th>match</th>\n",
       "      <th>tele_up</th>\n",
       "      <th>tele_low</th>\n",
       "      <th>auto_up</th>\n",
       "      <th>auto_low</th>\n",
       "      <th>hangar</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm16</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm20</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm24</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm27</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm33</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm38</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm50</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>frc1318</td>\n",
       "      <td>qm54</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      team match  tele_up  tele_low  auto_up  auto_low  hangar\n",
       "0  frc1318  qm11        3         1        0         0       0\n",
       "1  frc1318  qm16        5         0        0         0       0\n",
       "2  frc1318  qm20        4         1        0         0       2\n",
       "3  frc1318  qm24        3         0        1         0       0\n",
       "4  frc1318  qm27        6         0        0         0       0\n",
       "5  frc1318  qm33        7         1        0         0       0\n",
       "6  frc1318  qm38        4         1        1         0       0\n",
       "7  frc1318   qm5        4         0        0         0       2\n",
       "8  frc1318  qm50        8         2        1         0       2\n",
       "9  frc1318  qm54        0         0        0         0       0"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "16107357-7ee8-4a22-8d5a-f0e70736a8dd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "\n",
       "  <div class=\"bk-root\" id=\"4ba0ed26-ade5-42ca-8a67-81975bb753f4\" data-root-id=\"1772\"></div>\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/javascript": [
       "(function(root) {\n",
       "  function embed_document(root) {\n",
       "    \n",
       "  const docs_json = {\"0caad498-b4c7-43ba-979e-3b42c48254e1\":{\"defs\":[],\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1783\"}],\"center\":[{\"id\":\"1785\"},{\"id\":\"1789\"},{\"id\":\"1819\"}],\"height\":400,\"left\":[{\"id\":\"1786\"}],\"renderers\":[{\"id\":\"1808\"},{\"id\":\"1826\"},{\"id\":\"1845\"},{\"id\":\"1866\"},{\"id\":\"1889\"}],\"title\":{\"id\":\"1773\"},\"toolbar\":{\"id\":\"1791\"},\"toolbar_location\":null,\"x_range\":{\"id\":\"1775\"},\"x_scale\":{\"id\":\"1779\"},\"y_range\":{\"id\":\"1777\"},\"y_scale\":{\"id\":\"1781\"}},\"id\":\"1772\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1818\",\"type\":\"Selection\"},{\"attributes\":{\"fields\":[\"auto_low\",\"auto_up\"]},\"id\":\"1797\",\"type\":\"Stack\"},{\"attributes\":{\"data\":{\"auto_low\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"auto_up\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"hangar\":{\"__ndarray__\":\"AAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"index\":[0,1,2,3,4,5,6,7,8,9],\"match\":[\"qm11\",\"qm16\",\"qm20\",\"qm24\",\"qm27\",\"qm33\",\"qm38\",\"qm5\",\"qm50\",\"qm54\"],\"team\":[\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\"],\"tele_low\":{\"__ndarray__\":\"AQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"tele_up\":{\"__ndarray__\":\"AwAAAAUAAAAEAAAAAwAAAAYAAAAHAAAABAAAAAQAAAAIAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]}},\"selected\":{\"id\":\"1907\"},\"selection_policy\":{\"id\":\"1906\"}},\"id\":\"1884\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"factors\":[\"qm11\",\"qm16\",\"qm20\",\"qm24\",\"qm27\",\"qm33\",\"qm38\",\"qm5\",\"qm50\",\"qm54\"]},\"id\":\"1775\",\"type\":\"FactorRange\"},{\"attributes\":{},\"id\":\"1816\",\"type\":\"AllLabels\"},{\"attributes\":{},\"id\":\"1882\",\"type\":\"Selection\"},{\"attributes\":{\"label\":{\"value\":\"tele_up\"},\"renderers\":[{\"id\":\"1866\"}]},\"id\":\"1883\",\"type\":\"LegendItem\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1793\"}},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#a6cee3\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#a6cee3\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#a6cee3\"},\"top\":{\"expr\":{\"id\":\"1794\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1806\",\"type\":\"VBar\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1801\"}},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#fb9a99\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#fb9a99\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#fb9a99\"},\"top\":{\"expr\":{\"id\":\"1802\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1887\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"1813\",\"type\":\"AllLabels\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1801\"}},\"fill_color\":{\"value\":\"#fb9a99\"},\"hatch_color\":{\"value\":\"#fb9a99\"},\"line_color\":{\"value\":\"#fb9a99\"},\"top\":{\"expr\":{\"id\":\"1802\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1886\",\"type\":\"VBar\"},{\"attributes\":{\"fields\":[\"auto_low\",\"auto_up\",\"tele_low\"]},\"id\":\"1798\",\"type\":\"Stack\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1795\"}},\"fill_color\":{\"value\":\"#1f78b4\"},\"hatch_color\":{\"value\":\"#1f78b4\"},\"line_color\":{\"value\":\"#1f78b4\"},\"top\":{\"expr\":{\"id\":\"1796\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1823\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"1881\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"fields\":[\"auto_low\",\"auto_up\",\"tele_low\"]},\"id\":\"1799\",\"type\":\"Stack\"},{\"attributes\":{\"fields\":[\"auto_low\",\"auto_up\",\"tele_low\",\"tele_up\"]},\"id\":\"1800\",\"type\":\"Stack\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1793\"}},\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#a6cee3\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#a6cee3\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#a6cee3\"},\"top\":{\"expr\":{\"id\":\"1794\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1807\",\"type\":\"VBar\"},{\"attributes\":{\"axis\":{\"id\":\"1786\"},\"coordinates\":null,\"dimension\":1,\"group\":null,\"ticker\":null},\"id\":\"1789\",\"type\":\"Grid\"},{\"attributes\":{\"data\":{\"auto_low\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"auto_up\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"hangar\":{\"__ndarray__\":\"AAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"index\":[0,1,2,3,4,5,6,7,8,9],\"match\":[\"qm11\",\"qm16\",\"qm20\",\"qm24\",\"qm27\",\"qm33\",\"qm38\",\"qm5\",\"qm50\",\"qm54\"],\"team\":[\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\"],\"tele_low\":{\"__ndarray__\":\"AQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"tele_up\":{\"__ndarray__\":\"AwAAAAUAAAAEAAAAAwAAAAYAAAAHAAAABAAAAAQAAAAIAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]}},\"selected\":{\"id\":\"1838\"},\"selection_policy\":{\"id\":\"1837\"}},\"id\":\"1821\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1815\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1884\"},\"glyph\":{\"id\":\"1886\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1888\"},\"name\":\"hangar\",\"nonselection_glyph\":{\"id\":\"1887\"},\"view\":{\"id\":\"1890\"}},\"id\":\"1889\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1781\",\"type\":\"LinearScale\"},{\"attributes\":{\"callback\":null,\"tooltips\":\"@team @match, $name: @$name\"},\"id\":\"1790\",\"type\":\"HoverTool\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"text\":\"IRS 1318 Team Chart\"},\"id\":\"1773\",\"type\":\"Title\"},{\"attributes\":{\"label\":{\"value\":\"tele_low\"},\"renderers\":[{\"id\":\"1845\"}]},\"id\":\"1860\",\"type\":\"LegendItem\"},{\"attributes\":{},\"id\":\"1837\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1817\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"source\":{\"id\":\"1840\"}},\"id\":\"1846\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1787\",\"type\":\"BasicTicker\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1815\"},\"group\":null,\"major_label_policy\":{\"id\":\"1816\"},\"ticker\":{\"id\":\"1784\"}},\"id\":\"1783\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"label\":{\"value\":\"auto_low\"},\"renderers\":[{\"id\":\"1808\"}]},\"id\":\"1820\",\"type\":\"LegendItem\"},{\"attributes\":{\"source\":{\"id\":\"1861\"}},\"id\":\"1867\",\"type\":\"CDSView\"},{\"attributes\":{\"fields\":[\"auto_low\",\"auto_up\",\"tele_low\",\"tele_up\"]},\"id\":\"1801\",\"type\":\"Stack\"},{\"attributes\":{\"tools\":[{\"id\":\"1790\"}]},\"id\":\"1791\",\"type\":\"Toolbar\"},{\"attributes\":{\"label\":{\"value\":\"auto_up\"},\"renderers\":[{\"id\":\"1826\"}]},\"id\":\"1839\",\"type\":\"LegendItem\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1797\"}},\"fill_color\":{\"value\":\"#b2df8a\"},\"hatch_color\":{\"value\":\"#b2df8a\"},\"line_color\":{\"value\":\"#b2df8a\"},\"top\":{\"expr\":{\"id\":\"1798\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1842\",\"type\":\"VBar\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1797\"}},\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#b2df8a\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#b2df8a\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#b2df8a\"},\"top\":{\"expr\":{\"id\":\"1798\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1844\",\"type\":\"VBar\"},{\"attributes\":{\"fields\":[\"auto_low\"]},\"id\":\"1794\",\"type\":\"Stack\"},{\"attributes\":{\"coordinates\":null,\"group\":null,\"items\":[{\"id\":\"1820\"},{\"id\":\"1839\"},{\"id\":\"1860\"},{\"id\":\"1883\"},{\"id\":\"1908\"}]},\"id\":\"1819\",\"type\":\"Legend\"},{\"attributes\":{},\"id\":\"1838\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1858\",\"type\":\"UnionRenderers\"},{\"attributes\":{},\"id\":\"1907\",\"type\":\"Selection\"},{\"attributes\":{\"fields\":[\"auto_low\",\"auto_up\",\"tele_low\",\"tele_up\",\"hangar\"]},\"id\":\"1802\",\"type\":\"Stack\"},{\"attributes\":{\"source\":{\"id\":\"1821\"}},\"id\":\"1827\",\"type\":\"CDSView\"},{\"attributes\":{\"data\":{\"auto_low\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"auto_up\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"hangar\":{\"__ndarray__\":\"AAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"index\":[0,1,2,3,4,5,6,7,8,9],\"match\":[\"qm11\",\"qm16\",\"qm20\",\"qm24\",\"qm27\",\"qm33\",\"qm38\",\"qm5\",\"qm50\",\"qm54\"],\"team\":[\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\"],\"tele_low\":{\"__ndarray__\":\"AQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"tele_up\":{\"__ndarray__\":\"AwAAAAUAAAAEAAAAAwAAAAYAAAAHAAAABAAAAAQAAAAIAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]}},\"selected\":{\"id\":\"1882\"},\"selection_policy\":{\"id\":\"1881\"}},\"id\":\"1861\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1840\"},\"glyph\":{\"id\":\"1842\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1844\"},\"name\":\"tele_low\",\"nonselection_glyph\":{\"id\":\"1843\"},\"view\":{\"id\":\"1846\"}},\"id\":\"1845\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1779\",\"type\":\"CategoricalScale\"},{\"attributes\":{},\"id\":\"1906\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"label\":{\"value\":\"hangar\"},\"renderers\":[{\"id\":\"1889\"}]},\"id\":\"1908\",\"type\":\"LegendItem\"},{\"attributes\":{\"fields\":[\"auto_low\"]},\"id\":\"1795\",\"type\":\"Stack\"},{\"attributes\":{\"data\":{\"auto_low\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"auto_up\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"hangar\":{\"__ndarray__\":\"AAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"index\":[0,1,2,3,4,5,6,7,8,9],\"match\":[\"qm11\",\"qm16\",\"qm20\",\"qm24\",\"qm27\",\"qm33\",\"qm38\",\"qm5\",\"qm50\",\"qm54\"],\"team\":[\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\"],\"tele_low\":{\"__ndarray__\":\"AQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"tele_up\":{\"__ndarray__\":\"AwAAAAUAAAAEAAAAAwAAAAYAAAAHAAAABAAAAAQAAAAIAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]}},\"selected\":{\"id\":\"1859\"},\"selection_policy\":{\"id\":\"1858\"}},\"id\":\"1840\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1799\"}},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#33a02c\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#33a02c\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#33a02c\"},\"top\":{\"expr\":{\"id\":\"1800\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1864\",\"type\":\"VBar\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1797\"}},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#b2df8a\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#b2df8a\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#b2df8a\"},\"top\":{\"expr\":{\"id\":\"1798\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1843\",\"type\":\"VBar\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1799\"}},\"fill_color\":{\"value\":\"#33a02c\"},\"hatch_color\":{\"value\":\"#33a02c\"},\"line_color\":{\"value\":\"#33a02c\"},\"top\":{\"expr\":{\"id\":\"1800\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1863\",\"type\":\"VBar\"},{\"attributes\":{\"source\":{\"id\":\"1884\"}},\"id\":\"1890\",\"type\":\"CDSView\"},{\"attributes\":{\"fields\":[\"auto_low\",\"auto_up\"]},\"id\":\"1796\",\"type\":\"Stack\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1795\"}},\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#1f78b4\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#1f78b4\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#1f78b4\"},\"top\":{\"expr\":{\"id\":\"1796\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1825\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"1812\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1784\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1861\"},\"glyph\":{\"id\":\"1863\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1865\"},\"name\":\"tele_up\",\"nonselection_glyph\":{\"id\":\"1864\"},\"view\":{\"id\":\"1867\"}},\"id\":\"1866\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1859\",\"type\":\"Selection\"},{\"attributes\":{\"source\":{\"id\":\"1803\"}},\"id\":\"1809\",\"type\":\"CDSView\"},{\"attributes\":{\"fields\":[]},\"id\":\"1793\",\"type\":\"Stack\"},{\"attributes\":{\"end\":15},\"id\":\"1777\",\"type\":\"Range1d\"},{\"attributes\":{\"axis\":{\"id\":\"1783\"},\"coordinates\":null,\"group\":null,\"ticker\":null},\"id\":\"1785\",\"type\":\"Grid\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1793\"}},\"fill_color\":{\"value\":\"#a6cee3\"},\"hatch_color\":{\"value\":\"#a6cee3\"},\"line_color\":{\"value\":\"#a6cee3\"},\"top\":{\"expr\":{\"id\":\"1794\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1805\",\"type\":\"VBar\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1803\"},\"glyph\":{\"id\":\"1805\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1807\"},\"name\":\"auto_low\",\"nonselection_glyph\":{\"id\":\"1806\"},\"view\":{\"id\":\"1809\"}},\"id\":\"1808\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"coordinates\":null,\"data_source\":{\"id\":\"1821\"},\"glyph\":{\"id\":\"1823\"},\"group\":null,\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1825\"},\"name\":\"auto_up\",\"nonselection_glyph\":{\"id\":\"1824\"},\"view\":{\"id\":\"1827\"}},\"id\":\"1826\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1795\"}},\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#1f78b4\"},\"hatch_alpha\":{\"value\":0.1},\"hatch_color\":{\"value\":\"#1f78b4\"},\"line_alpha\":{\"value\":0.1},\"line_color\":{\"value\":\"#1f78b4\"},\"top\":{\"expr\":{\"id\":\"1796\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1824\",\"type\":\"VBar\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1801\"}},\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#fb9a99\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#fb9a99\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#fb9a99\"},\"top\":{\"expr\":{\"id\":\"1802\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1888\",\"type\":\"VBar\"},{\"attributes\":{\"coordinates\":null,\"formatter\":{\"id\":\"1812\"},\"group\":null,\"major_label_policy\":{\"id\":\"1813\"},\"ticker\":{\"id\":\"1787\"}},\"id\":\"1786\",\"type\":\"LinearAxis\"},{\"attributes\":{\"bottom\":{\"expr\":{\"id\":\"1799\"}},\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#33a02c\"},\"hatch_alpha\":{\"value\":0.2},\"hatch_color\":{\"value\":\"#33a02c\"},\"line_alpha\":{\"value\":0.2},\"line_color\":{\"value\":\"#33a02c\"},\"top\":{\"expr\":{\"id\":\"1800\"}},\"width\":{\"value\":0.9},\"x\":{\"field\":\"match\"}},\"id\":\"1865\",\"type\":\"VBar\"},{\"attributes\":{\"data\":{\"auto_low\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"auto_up\":{\"__ndarray__\":\"AAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"hangar\":{\"__ndarray__\":\"AAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"index\":[0,1,2,3,4,5,6,7,8,9],\"match\":[\"qm11\",\"qm16\",\"qm20\",\"qm24\",\"qm27\",\"qm33\",\"qm38\",\"qm5\",\"qm50\",\"qm54\"],\"team\":[\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\",\"frc1318\"],\"tele_low\":{\"__ndarray__\":\"AQAAAAAAAAABAAAAAAAAAAAAAAABAAAAAQAAAAAAAAACAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]},\"tele_up\":{\"__ndarray__\":\"AwAAAAUAAAAEAAAAAwAAAAYAAAAHAAAABAAAAAQAAAAIAAAAAAAAAA==\",\"dtype\":\"int32\",\"order\":\"little\",\"shape\":[10]}},\"selected\":{\"id\":\"1818\"},\"selection_policy\":{\"id\":\"1817\"}},\"id\":\"1803\",\"type\":\"ColumnDataSource\"}],\"root_ids\":[\"1772\"]},\"title\":\"Bokeh Application\",\"version\":\"2.4.2\"}};\n",
       "  const render_items = [{\"docid\":\"0caad498-b4c7-43ba-979e-3b42c48254e1\",\"root_ids\":[\"1772\"],\"roots\":{\"1772\":\"4ba0ed26-ade5-42ca-8a67-81975bb753f4\"}}];\n",
       "  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
       "\n",
       "  }\n",
       "  if (root.Bokeh !== undefined) {\n",
       "    embed_document(root);\n",
       "  } else {\n",
       "    let attempts = 0;\n",
       "    const timer = setInterval(function(root) {\n",
       "      if (root.Bokeh !== undefined) {\n",
       "        clearInterval(timer);\n",
       "        embed_document(root);\n",
       "      } else {\n",
       "        attempts++;\n",
       "        if (attempts > 100) {\n",
       "          clearInterval(timer);\n",
       "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
       "        }\n",
       "      }\n",
       "    }, 10, root)\n",
       "  }\n",
       "})(window);"
      ],
      "application/vnd.bokehjs_exec.v0+json": ""
     },
     "metadata": {
      "application/vnd.bokehjs_exec.v0+json": {
       "id": "1772"
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "source = df\n",
    "\n",
    "p = figure(x_range = df['match'],\n",
    "           y_range = (0,15), \n",
    "           title = \"IRS 1318 Team Chart\", \n",
    "           plot_width = 600, \n",
    "           height = 400, \n",
    "           toolbar_location = None, \n",
    "           tools=\"hover\", tooltips=\"@team @match, $name: @$name\")\n",
    "\n",
    "p.vbar_stack(['auto_low', 'auto_up', 'tele_low', 'tele_up','hangar'],\n",
    "                             x = 'match', \n",
    "                             color = bokeh.palettes.Paired[5][:], \n",
    "                             width = 0.9,\n",
    "                             source = source,\n",
    "                             legend_label = ['auto_low', 'auto_up', 'tele_low', 'tele_up','hangar'])\n",
    "                            \n",
    "\n",
    "# display the plot\n",
    "plotting.show(p)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a4f998a-c351-40c1-a19e-36b26cc4c3a0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3db7befb-9603-4f7e-8da9-d7e8bba7be08",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [22]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mteam\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m1318\u001b[39m\u001b[38;5;124m\"\u001b[39m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df['team'] = \"1318\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d7a1cce3-1962-4d04-97f3-ce4fdd7b48ae",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [23]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmatch\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m matches\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df['match'] = matches"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ece75e16-6422-4a09-9c6f-c66f69d809f8",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [24]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtele_up\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m tele_up\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df['tele_up'] = tele_up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ccb96722-df5c-4556-989a-001f80a5752d",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [25]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mtele_low\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m tele_low\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df['tele_low'] = tele_low"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "2bf07f3c-4176-49c9-b40b-6c38e0527555",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [26]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mauto_up\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m auto_up\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df['auto_up'] = auto_up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2716edce-1581-4613-a5b1-1387a4969a89",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['tele_up', '4', '4', '4']"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tele_up"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "46f2b61a-70db-4f49-8b0f-931bbaa1b9a4",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [28]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mauto_low\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m auto_low\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df['auto_low'] = auto_low"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "13785881-99d3-4451-880b-205b307c95cb",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [29]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mhangar\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m hangar\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df['hangar'] = hangar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "726add38-d9c6-40d7-ab08-d09125fcf557",
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'df' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[1;32mIn [30]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[1;34m()\u001b[0m\n\u001b[1;32m----> 1\u001b[0m \u001b[43mdf\u001b[49m\u001b[38;5;241m.\u001b[39mdrop(columns \u001b[38;5;241m=\u001b[39m [\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mteam\u001b[39m\u001b[38;5;124m'\u001b[39m])\n",
      "\u001b[1;31mNameError\u001b[0m: name 'df' is not defined"
     ]
    }
   ],
   "source": [
    "df.drop(columns = ['team'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e32eb764-679e-452e-bd93-771743c524a9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6e80ba1b-e9ef-4b03-9af4-590bc3f04645",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d994ed2c-ccae-49c2-9da5-f9bf28ba3c29",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
